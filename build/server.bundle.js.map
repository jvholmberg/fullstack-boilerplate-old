{"version":3,"sources":["webpack:///webpack/bootstrap bf364b5be28abfe832fb","webpack:///./server.js","webpack:///external \"express\"","webpack:///external \"body-parser\"","webpack:///external \"path\"","webpack:///external \"compression\"","webpack:///./routes.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACtCA;;AAEA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,KAAM,aAAa,eAAK,IAAL,CAAU,SAAV,EAAqB,QAArB,EAA+B,QAA/B,CAAnB;AACA,KAAM,YAAY,eAAK,IAAL,CAAU,SAAV,EAAqB,QAArB,EAA+B,SAA/B,CAAlB;;AAEA;AACA,KAAI,MAAM,wBAAV;AACA,KAAI,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACA,KAAI,GAAJ,CAAQ,OAAR,EAAiB,SAAjB;AACA,KAAI,GAAJ,CAAQ,SAAR,EAAmB,kBAAQ,MAAR,CAAe,UAAf,CAAnB;AACA,KAAI,GAAJ,CAAQ,qBAAW,UAAX,CAAsB,EAAE,UAAU,IAAZ,EAAtB,CAAR;AACA,KAAI,GAAJ,CAAQ,4BAAR;;AAEA;AACA,KAAI,GAAJ,CAAQ,oBAAQ,CAAR,CAAR;;AAEA;AACA;;AAEA;AACA,KAAI,OAAO,QAAQ,GAAR,CAAY,IAAZ,IAAoB,IAA/B;AACA,KAAI,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACnB,aAAQ,GAAR,CAAY,8BAAZ,EAA4C,IAA5C;AACH,EAFD;;AAIA,WAAU,OAAO,OAAP,GAAiB,GAA3B,C;;;;;;AC/BA,qC;;;;;;ACAA,yC;;;;;;ACAA,kC;;;;;;ACAA,yC;;;;;;ACAA;;AAEA;;AAEA,KAAI,SAAS,qBAAb;;AAEA,QAAO,GAAP,CAAW,GAAX,EAAgB,UAAC,GAAD,EAAM,GAAN,EAAc;AAC5B,OAAI,MAAJ,CAAW,MAAX;AACD,EAFD;;AAIA;;AAEA,QAAO,OAAP,GAAiB,MAAjB,C","file":"server.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/Users/johan/Documents/Projects/fullstack-boilerplate/build\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap bf364b5be28abfe832fb\n **/","'use strict';\n\n// Loading global node_modules\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport path from 'path';\nimport compression from 'compression';\n\nconst STATIC_DIR = path.join(__dirname, 'public', 'static');\nconst VIEWS_DIR = path.join(__dirname, 'public', 'content');\n\n// Setup express\nlet app = express();\napp.set('view engine', 'ejs');\napp.set('views', VIEWS_DIR);\napp.use('/static', express.static(STATIC_DIR));\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(compression());\n\n// Setup routes\napp.use(require('./routes.js'));\n\n// Error-handling\n//app.use(require('./error.js'));\n\n// Start server\nvar port = process.env.PORT || 3000;\napp.listen(port, () => {\n    console.log('Server listening on port %s.', port);\n});\n\nexports = module.exports = app;\n\n\n\n/** WEBPACK FOOTER **\n ** ./server.js\n **/","module.exports = require(\"express\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"express\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = require(\"body-parser\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"body-parser\"\n ** module id = 3\n ** module chunks = 0\n **/","module.exports = require(\"path\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"path\"\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = require(\"compression\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"compression\"\n ** module id = 5\n ** module chunks = 0\n **/","'use strict';\n\nimport {Router} from 'express';\n\nvar router = new Router();\n\nrouter.get('/', (req, res) => {\n  res.render('home');\n});\n\n// Setup API-routes\n\nmodule.exports = router;\n\n\n\n/** WEBPACK FOOTER **\n ** ./routes.js\n **/"],"sourceRoot":""}